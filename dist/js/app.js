(()=>{"use strict";var e,a,r={422:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0});var r=function(){function e(){}return Object.defineProperty(e,"displayUpdate",{set:function(a){e._displayUpdate=a},enumerable:!1,configurable:!0}),Object.defineProperty(e,"displayValue",{get:function(){return e._displayValue},enumerable:!1,configurable:!0}),e.buttonHandler=function(a){switch(a.type){case"number":e.numberHandler(a);break;case"operation":e.operationHandler(a);break;case"action":e.actionHandler(a)}e._displayUpdate()},e.numberHandler=function(a){e._displayValue.length!=e._maxLength&&("."===a.value&&-1!==e.displayValue.indexOf(".")||("0"!==e._displayValue||"."!==a.value?"0"!==e._displayValue?e._operators.includes(e._displayValue)?e._displayValue=a.value:e._displayValue+=a.value:e._displayValue=a.value:e._displayValue+=a.value))},e.operationHandler=function(a){void 0!==e._operator&&e.calculate(),e._operator=a.value,e._previousOperand=parseFloat(e._displayValue),e._displayValue=a.value},e.actionHandler=function(a){switch(a.value){case"equals":e.calculate(),e._currentOperand=e._previousOperand=e._operator=void 0;break;case"C":e._displayValue="0",e._currentOperand=e._previousOperand=e._operator=void 0;break;case"back":e._displayValue=e.displayValue.slice(0,-1),""===e._displayValue&&(e._displayValue="0")}},e.calculate=function(){var a;switch(e._currentOperand=parseFloat(e._displayValue),isNaN(e._currentOperand)&&(e._currentOperand=0),e._operator){case"+":a=e._previousOperand+e._currentOperand;break;case"-":a=e._previousOperand-e._currentOperand;break;case"*":a=e._previousOperand*e._currentOperand;break;case"/":if(0===e._currentOperand){a=0;break}a=e._previousOperand/e._currentOperand;break;case"%":a=e._previousOperand*(e._currentOperand/100);break;default:a=e._currentOperand}var r=a.toString();r.length>e._maxLength&&(r=r.slice(0,e._maxLength-2),r+=".."),e._displayValue=r},e._maxLength=12,e._displayValue="0",e._operators=["+","-","*","/","%"],e}();a.default=r}},n={};e=function e(a){var t=n[a];if(void 0!==t)return t.exports;var u=n[a]={exports:{}};return r[a](u,u.exports,e),u.exports}(422),a=function(){function a(){}return a.init=function(){a.display=document.querySelector("#field"),a.buttons=document.querySelectorAll(".cell"),e.default.displayUpdate=function(){a.display.innerHTML=e.default.displayValue},a.buttons.forEach((function(a){a.addEventListener("click",(function(a){var r=a.target.dataset,n=r.type,t=r.value;e.default.buttonHandler({type:n,value:t})}))}))},a}(),document.addEventListener("DOMContentLoaded",a.init)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,